<script>
    require([
        'jquery'
    ], function ($) {
        //variables
        var saveButton              = $('#save');
        var nextButton              = $('#Next');
        var resetButton             = $('#reset');
        var sourceStoreWrapper      = $('#source-store-wrapper');
        var targetStoreElement      = $('select[name="magento_destination_store"]');
        var targetLanguageElement   = $('select[name="straker_target_language"]');
        var sourceStoreElement      = $('select[name="magento_source_store"]');
        var sourceLanguageElement   = $('select[name="straker_source_language"]');
        var contentTabs             = $('#job_tabs_attachment_products,#job_tabs_categories,#job_tabs_cms_pages,#job_tabs_cms_blocks');
        var editForm                = $('#edit_form');

        //functions
        function isEmpty(object) {
            return (
                typeof object === 'undefined'
                || object === null
                || ( typeof object === 'string' && $.trim(object) === '')
                || ( object instanceof jQuery && typeof object.get(0) === 'undefined' )
            );
        }

        function showErrorMessage(name = '') {
            if(name.trim() === ''){
                $('.note.required').show();
            }else{
                $('.note.required.' + name).show();
            }
        }

        function hideErrorMessage(name = '') {
            if(name.trim() === ''){
                $('.note.required').hide();
            }else{
                $('.note.required.' + name).hide();
            }
        }

        function showSourceStore() {
            if(!isEmpty(sourceStoreWrapper)){
                sourceStoreWrapper.show();
            }
        }

        function hideSourceStore() {
            if(!isEmpty(sourceStoreWrapper)){
                sourceStoreWrapper.hide();
            }
        }

        function init() {
            if (!isEmpty(saveButton)) {
                saveButton.hide().attr('disabled', true);
            }

            if (!isEmpty(nextButton)) {
                nextButton.attr('disabled', true);
            }

            if (!isEmpty(resetButton)) {
                resetButton.hide();
            }

            if (!isEmpty(sourceStoreWrapper)) {
                sourceStoreWrapper.show();
            }

            if (!isEmpty(contentTabs)) {
                contentTabs.hide();
            }
        }

        function showSourceStorePicker(destinationStoreId) {
            enableAllOptions();

            if(!isEmpty(destinationStoreId)){
                disableOneOption.apply(sourceStoreElement, [sourceStoreElement, destinationStoreId]);
            }

            targetLanguageElement.val('');
            showErrorMessage(targetLanguageElement.attr('name'));

            sourceStoreElement.val('');
            showErrorMessage(sourceStoreElement.attr('name'));

            sourceLanguageElement.val('');
            showErrorMessage(sourceLanguageElement.attr('name'));

            showSourceStore();
        }

        function hideSourceStorePicker(destinationStoreId, tl, sourceStoreId, sl) {
            hideSourceStore();

            targetStoreElement.val(destinationStoreId);
            disableOneOption.apply(sourceStoreElement, [sourceStoreElement, destinationStoreId]);

            targetLanguageElement.val(tl).show();
            disableOneOption.apply(sourceLanguageElement, [sourceLanguageElement, tl]);

            sourceStoreElement.val(sourceStoreId);
            disableOneOption.apply(targetStoreElement, [targetStoreElement, sourceStoreId]);

            sourceLanguageElement.val(sl);
            disableOneOption.apply(targetLanguageElement, [targetLanguageElement, sl]);
        }

        function resetLanguagePairElements() {
            targetStoreElement.val('');
            targetLanguageElement.val('');
            sourceStoreElement.val('');
            sourceLanguageElement.val('');
            enableAllOptions();
            showSourceStorePicker();
            showErrorMessage();
        }

        function disableOneOption(selectElement, optionValue) {
            if (!(selectElement instanceof jQuery)) {
                selectElement = $(selectElement);
            }

            if (!isEmpty(selectElement.get(0)) && !isEmpty(optionValue)) {
                //enable disabled options
                enableOption(selectElement);
                //disable the option with the same value as ```optionValue```
                selectElement.find('option[value="' + optionValue + '"]').attr('disabled', true);
                //turn off error message
                hideErrorMessage($(this).prop('name'));
            }else{
                showErrorMessage($(this).prop('name'));
            }
        }

        function enableOption(element) {
            if(!(element instanceof jQuery)){
                element = $(element);
            }
            element.find('option:disabled').prop('disabled', false);
        }

        function enableAllOptions() {
            if (!isEmpty(targetStoreElement)) {
                enableOption(targetStoreElement);
            }

            if (!isEmpty(targetLanguageElement)) {
                enableOption(targetLanguageElement);
            }

            if (!isEmpty(sourceStoreElement)) {
                enableOption(sourceStoreElement);
            }

            if (!isEmpty(sourceLanguageElement)) {
                enableOption(sourceLanguageElement);
            }
        }

        function getLanguageData() {
            return {
                magento_destination_store: targetStoreElement,
                magento_source_store: sourceStoreElement,
                straker_target_language: targetLanguageElement,
                straker_source_language: sourceLanguageElement
            };
        }

        function checkLanguageData() {
            var languageInputs = getLanguageData();
            var emptyCount = 0;

            $.each(languageInputs, function (key, element) {
                if (element instanceof jQuery && element.val() === '') {
                    emptyCount++;
                }
            });

            if (emptyCount > 0) {
                nextButton.attr('disabled', true);
                saveButton.attr('disabled', true);
            } else {
                nextButton.attr('disabled', false);
                hideErrorMessage();
            }

            return languageInputs;
        }

        function checkStoreData() {
            var data = {
                product_data: $('input[name="products"]').val(),
                category_data: $('input[name="categories"]').val(),
                page_data: $('input[name="pages"]').val(),
                block_data: $('input[name="blocks"]').val()
            };

            var empty = 0;

            $.each(data, function (key, value) {
                if (value === '' || value === undefined) {
                    empty++
                }
            });

            if (empty === 4) {
                if(!isEmpty(saveButton)){
                    saveButton.attr('disabled', true);
                }
            } else {
                if(!isEmpty(saveButton)){
                    saveButton.attr('disabled', false);
                }
            }
        }

        init();

        //============ Event listeners =============
        //when target store changed
        if (targetStoreElement !== undefined || targetStoreElement !== null) {
            targetStoreElement.on("change", function () {
                sourceStoreElement.val('');
                var destinationStoreId = $(this).val();

                if (destinationStoreId !== '') {
                    $.ajax({
                        url: '<?php echo $block->getUrl('EasyTranslationPlatform/Jobs/CheckLanguagePairs') ?>',
                        data: {
                            form_key: window.FORM_KEY,
                            target_store_id: destinationStoreId
                        },
                        showLoader: true,
                        type: 'POST'
                    }).done(function (response) {

                        if (response['store-data'] !== undefined) {
                            var storeData = response['store-data'];

                            var sourceStoreId = '';
                            var tl = '';
                            var sl = '';

                            if (!isEmpty(storeData['straker/general/destination_language'])) {
                                tl = storeData['straker/general/destination_language'];
                            }

                            if (!isEmpty(storeData['straker/general/source_language'])) {
                                sl = storeData['straker/general/source_language'];
                            }

                            if (!isEmpty(storeData['straker/general/source_store'])) {
                                sourceStoreId = storeData['straker/general/source_store'];
                            }

                            if (sourceStoreId !== '' && tl !== '' && sl !== '') {
                                //hide source store picker
                                hideSourceStorePicker(destinationStoreId, tl, sourceStoreId, sl);
                            } else {
                                // show source store picker
                                showSourceStorePicker(destinationStoreId);
                            }
                        }
                        checkLanguageData();
                    });
                } else {
                    resetLanguagePairElements();
                }
            });//end of targetStoreElement.on("change" ...
        }//end of if ( targetStoreElement !== undefined || targetStoreElement !== null)

        //when target language changed
        if (!isEmpty(targetLanguageElement)) {
            targetLanguageElement.on('change', function () {
                disableOneOption.apply(this, [sourceLanguageElement, $(this).val()]);
            })
        }

        //when source store changed
        if(!isEmpty(sourceStoreElement)){
            sourceStoreElement.on("change", function () {
                disableOneOption.apply(this, [targetStoreElement, $(this).val()]);
            });
        }

        //when source language changed
        if (!isEmpty(sourceLanguageElement)) {
            sourceLanguageElement.on('change', function () {
                disableOneOption.apply(this, [targetLanguageElement, $(this).val()]);
            });
        }

        $(document).ajaxSend(function (event, jqXHR, settings) {
            var destination_store_id;
            var source_store_id;

            if(!isEmpty(targetStoreElement)){
                destination_store_id = targetStoreElement.val();
            }

            if(!isEmpty(sourceStoreElement)){
                source_store_id = sourceStoreElement.val();
            }

            if (!source_store_id) {
                source_store_id = destination_store_id;
            }

            if (settings.url.toLowerCase().search('easytranslationplatform/jobs/products') > -1) {
                settings.data = settings.data + '&source_store_id=' + source_store_id + '&target_store_id=' + destination_store_id;
//                window.products_ajax_url = settings.url;
            }

            if (settings.url.toLowerCase().search('easytranslationplatform/jobs/pages') > -1) {
                settings.data = settings.data + '&source_store_id=' + source_store_id + '&target_store_id=' + destination_store_id;
            }

            if (settings.url.toLowerCase().search('easytranslationplatform/jobs/blocks') > -1) {
                settings.data = settings.data + '&source_store_id=' + source_store_id + '&target_store_id=' + destination_store_id;
            }
        });

        if(!isEmpty(nextButton)){
            nextButton.on("click", function () {
                contentTabs.show();
                $('#job_tabs_attachment_products').click();
                $('#save').show();
                $('#reset').show();
                $(this).hide();
            });
        }

        if(!isEmpty(editForm)){
            editForm.on("change", "select", function () {
                if(!isEmpty(nextButton)) {
                    nextButton.attr('disabled', false);
                }
                checkLanguageData();
            });

            editForm.on("click", "input", function () {
                checkStoreData();
            });
        }

        if (!isEmpty(saveButton)) {
            saveButton.on("click", function () {
                $('body').trigger('processStart');
                $(this).attr('disabled', true);
            });
        }

        //check data when buttons clicked
        $('.page-actions').on('click', '.page-actions-buttons', function (e) {
            e.preventDefault();
            if ($('li[aria-labelledby="job_tabs_select_destination"]').hasClass('ui-state-active') && $(this).find('#Next:disabled').prop('disabled')) {
                $.each(getLanguageData(), function (key, element) {
                    if (element.val() === '') {
                        showErrorMessage(key);
                    } else {
                        hideErrorMessage(key);
                    }
                });
            }
        });
    });

</script>